
substitutions:
  name: qc_iaq_uno
  friend: QuantumSync Solutions IAQ-UNO
  version: "24.01.24.201"
  device_description: ${friendly_name} made by QuantumSync Solutions - IAQ-UNO Version':' ${version}.

esphome:
  name: "${name}"
  friendly_name: "${friend}"
  comment: "${friend}"
  platformio_options:
    board_build.flash_mode: dio
    
  on_boot:
  - priority: 900.0
    then:
      - lambda: |-
          id(cpu_speed) = ESP.getCpuFreqMHz();

  project:
    name: "IAQuno.QuantumSyncSolutions"
    version: "${version}"

globals:
  - id: cpu_speed
    type: int
    restore_value: no
    initial_value: "0"

esp32:
  board: esp32dev
  framework:
    type: arduino
    

logger:

api:
  encryption:
    key: !secret IAQ_API_ENCRYPTKEY

ota:
  password: !secret IAQ_OTA_PWD

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password
  ap:
    ssid: !secret IAQ_Wifi_Portal_SSID
    password: !secret IAQ_Wifi_Portal_PWD
  domain: !secret IAQ_Wifi_Domain

captive_portal:

web_server:
  port: 80

#ONBAORD LOCATION LED PIN SETUP
output:
  - platform: ledc
    pin: 2
    id: output_ledpin2

#ONBAORD LOCATION LED SETUP
light:
  - platform: monochromatic
    name: "LED Locate"
    output: output_ledpin2

#I2C PIN SETUP
i2c:
  - id: i2c0
    sda: 21
    scl: 22
    scan: true
    frequency: 800kHz

#I2C MULTIPLEXER CHANNEL SETUP
tca9548a:
  - id: multiplex0
    i2c_id: i2c0
    channels:
      - bus_id: multiplex0channel0
        channel: 0
      - bus_id: multiplex0channel1
        channel: 1
      - bus_id: multiplex0channel2
        channel: 2

#NEEDED FOR BME680 SENSOR USAGE WITH ESPHOME
bme680_bsec:
  - id: bme680
    i2c_id: "multiplex0channel0"
    address: 0x77
    state_save_interval: 6h
    sample_rate: lp
    iaq_mode: static
    
sensor:
#BH1750 ILLUMINATION SENSOR SETUP
  - platform: bh1750 
    name: "LUX"
    id: luxlight
    address: 0x23
    i2c_id: multiplex0channel1
    update_interval: 2s

#BME680 SENSOR SETUP
  - platform: bme680_bsec #BME680 TEMP/BARO/HUMIDITY/C02/GAS/IAQ/BVOC SENSOR SETUP
    bme680_bsec_id: bme680
    temperature:
      name: "Temperature"
      accuracy_decimals: 1
      filters:
      - lambda: return x * (9.0/5.0) + 32.0;
      unit_of_measurement: "°F"
      id: temperaturebme
    pressure:
      name: "Barometric Pressure"
      accuracy_decimals: 5
      id: pressure
    humidity:
      name: "Humidity"
      id: humiditybme
      accuracy_decimals: 1
    gas_resistance:
      name: "Gas Resistance"
      id: gas
      accuracy_decimals: 5
    co2_equivalent:
      name: "CO2 Equivalent"
    iaq:
      name: "IAQ"
      id: iaq
    breath_voc_equivalent:
      name: "Intake Breath VOC Equivalent"
      filters:
        - median

#SP30 eC02/TVOC SENSOR SETUP
  - platform: sgp30 
    i2c_id: multiplex0channel2
    eco2:
      name: "eCO2"
      accuracy_decimals: 1
    tvoc:
      name: "TVOC"
      accuracy_decimals: 1
    address: 0x58
    update_interval: 1s
    compensation: 
      temperature_source: temperaturebme
      humidity_source: humiditybme

#WIFI SIGNAL STRENGTH SETUP 
  - platform: wifi_signal 
    name: "IAQ UNO - WiFi Signal"
    update_interval: 120s

#IAQ FIRMWARE VERSION READOUT SETUP
- platform: template
    name: QC_IAQ_Version
    update_interval: 900s
    lambda: |- 
      return to_string("${version}");

#IAQ-UNO CPU SPEED SETUP 
  - platform: template
    name: "ESP Cpu Speed"
    accuracy_decimals: 0
    unit_of_measurement: Mhz
    lambda: |-
      return (id(cpu_speed));
    entity_category: "diagnostic"

#IAQ-UNO ONBOARD CPU TEMP SETUP
  - platform: template
    id: sys_esp_temperature
    name: ESP Temperature
    lambda: return temperatureRead();
    unit_of_measurement: °C
    device_class: TEMPERATURE
    update_interval: 60s

#IAQ-UNO UPTIME SINCE LAST REBOOT SETUP
  - platform: uptime
    name: Uptime
    id: sys_uptime
    update_interval: 60s

#IAQ-UNO MEMORY STATUS SETUP
  - platform: template
    id: esp_memory
    icon: mdi:memory
    name: IAQ Sensor Free Memory
    lambda: return heap_caps_get_free_size(MALLOC_CAP_INTERNAL) / 1024;
    unit_of_measurement: "kB"
    state_class: measurement
    entity_category: "diagnostic"

#PIR SENSOR SETUP
binary_sensor:
  - platform: gpio
    pin: 4
    name: "PIR Sensor"
    device_class: motion

text_sensor: 
#BME680 LAMBDA READOUT SETUP
  - platform: bme680_bsec 
    bme680_bsec_id: bme680
    iaq_accuracy:
      name: "IAQ Accuracy"

#WIFI INFORMATION READOUT SETUP
  - platform: wifi_info
    ip_address:
      name: IAQ-UNO IP Address
    ssid:
      name: IAQ-UNO Connected SSID
    bssid:
      name: IAQ-UNO Connected BSSID
    mac_address:
      name: IAQ-UNO Mac Wifi Address
    scan_results:
      name: IAQ-UNO Latest Scan Results
    dns_address:
      name: IAQ-UNO DNS Address


#IAQ CLASSIFICATION READOUT SETUP
  - platform: template
    name: "IAQ Classification"
    icon: "mdi:checkbox-marked-circle-outline"
    lambda: |-
      if ( int(id(iaq).state) <= 50) {
        return {"Excellent"};
      }
      else if (int(id(iaq).state) >= 50 && int(id(iaq).state) <= 100) {
        return {"Good"};
      }
      else if (int(id(iaq).state) >= 100 && int(id(iaq).state) <= 150) {
        return {"Lightly polluted"};
      }
      else if (int(id(iaq).state) >= 150 && int(id(iaq).state) <= 200) {
        return {"Moderately polluted"};
      }
      else if (int(id(iaq).state) >= 200 && int(id(iaq).state) <= 250) {
        return {"Heavily polluted"};
      }
      else if (int(id(iaq).state) >= 250 && int(id(iaq).state) <= 350) {
        return {"Severely polluted"};
      }
      else if (int(id(iaq).state) >= 350) {
        return {"Extremely polluted"};
      }
      else {
        return {"error"};
      }

#LUX BRIGHTNESS READOUT SETUP
  - platform: template
    name: "LUX Brightness"
    icon: "mdi:checkbox-marked-circle-outline"
    lambda: |-
      if (int(id(luxlight).state) <= 2) {
        return {"DARK"};
      }
      else if (int(id(luxlight).state) >= 2 && int(id(luxlight).state) <= 10) {
        return {"Inside Lights ON DIM"};
      }
      else if (int(id(luxlight).state) >= 10 && int(id(luxlight).state) <= 20) {
        return {"Inside Lights ON"};
      }
      else if (int(id(luxlight).state) >= 20 && int(id(luxlight).state) <= 200) {
        return {"Windows Open - Natural Light Coming In"};
      }
      else if (int(id(luxlight).state) >= 200 && int(id(luxlight).state) <= 550) {
        return {"Full Sun Coming in the house"};
      }
      else if (int(id(luxlight).state) >= 550 && int(id(luxlight).state) <= 1000) {
        return {"Sunny Day"};
      }
      else if (int(id(luxlight).state) >= 1000 && int(id(luxlight).state) <= 10000) {
        return {"Direct Sun"};
      }
      else if (int(id(luxlight).state) >= 10000) {
        return {"Extremely BRIGHT"};
      }
      else {
        return {"error"};
      }

#RESTART BUTTON TO POWER CYCLE THE IAQ-UNO
button:
  - platform: restart
    icon: mdi:power-cycle
    name: "IAQ Sensor Powercycle"
